spring:
  datasource:
    continueOnError: true
 #   url: jdbc:mysql://quartz-instance.cmdkmtqq3v6m.us-east-1.rds.amazonaws.com:3306/quartz_db?autoReconnect=true&useSSL=false    
 #   username: QuartzRoot
 #   password: QuartzRoot

# Quartz Scheduler config (except for the jobs)
org:
  quartz:
    scheduler:
      instanceName: 'capacity-info-reader-scheduler-instance'
      instanceId: 'AUTO'
    jobStore:
      class: 'org.quartz.impl.jdbcjobstore.JobStoreTX'
      driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
      isClustered: true
    threadPool:
      threadCount: 5

# Quartz Job for DHU with FTP Details
dhuFtpJob:
  # Quartz Scheduler details for DHU FTP Job
  ##########################################
  # Key is what goes into the "JOB_NAME" column of qrtz_job_details and, along with "JOB_GROUP", forms the key
  key: DhuFtpJob
  # Simple Text Description - goes into qrtz_job_details.description
  description: Job that retrieves file from DHU FTP Server and inserts the data into the Capacity Service
  # Job Starts immediately
  startDelay: 0
  # Repeat Interval is 1,000 milliseconds * 60 seconds * 5, i.e. five minutes
#  repeatInterval: 300000

  # FTP Details for DHU FTP Server - The below are NOT the actual settings, they are just for a test FTP server
  # deployed in AWS
  ###############################
 # ftpServer: ec2-107-23-133-83.compute-1.amazonaws.com
 # ftpPort: 22
 # ftpUsername: 'capacity_reader'
 # privateKeyFileName: capacity_reader.pem


# Quartz Job for EKHUFT (East Kent Hospitals University NHS Foundation Trust) with  Details
ekhuftApiJob:
  # Quartz Scheduler details for EKHUFT API Job
  #############################################
  # Key is what goes into the "JOB_NAME" column of qrtz_job_details and, along with "JOB_GROUP", forms the key
  key: EkhuftJob
  # Simple Text Description - goes into qrtz_job_details.description
  description: Job that calls the public API at xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  # Job Starts immediately
  startDelay: 0
  # Repeat Interval is 1,000 milliseconds * 60 seconds * 5, i.e. five minutes
 # repeatInterval: 300000

 # apiUrl: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Capacity Service - username and password must be defined as environment variables.
# The url needs to point to the capacity service URL hosted in AWS
# The user name and password must be defined as environment variables in AWS for this service, and these
# credentials will need to match those defined in the capacity service, as it is in the capacity service
# where these credentials will be validated.
capacity:
  service:
    client:
      api:
  #      url: http://capacityservicetest-env.smtchzepkk.us-east-1.elasticbeanstalk.com/capacity
  #      username: dummyValue
  #      password: dummyValue
